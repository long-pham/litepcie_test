stages:
  - test
  - build
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  UV_CACHE_DIR: "$CI_PROJECT_DIR/.cache/uv"

cache:
  paths:
    - .cache/pip
    - .cache/uv
    - .venv/

before_script:
  - python --version
  - pip install uv
  - uv venv
  - source .venv/bin/activate

# Lint and format checks
lint:
  stage: test
  image: python:3.10.11
  script:
    - uv pip install -e ".[dev]"
    - ruff check src/ tests/
    - black --check src/ tests/
    - mypy src/
  only:
    - merge_requests
    - main
    - develop

# Unit tests
test:
  stage: test
  image: python:3.10.11
  script:
    - uv pip install -e ".[dev]"
    - pytest tests/ -v --cov=litepcie_test --cov-report=term --cov-report=html --cov-report=xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - htmlcov/
    expire_in: 1 week
  only:
    - merge_requests
    - main
    - develop

# Build package
build:
  stage: build
  image: python:3.10.11
  script:
    - pip install build twine
    - python -m build
    - twine check dist/*
  artifacts:
    paths:
      - dist/
    expire_in: 1 week
  only:
    - tags
    - main

# Hardware-in-the-loop tests (optional)
.hil_test:
  stage: test
  tags:
    - fpga
    - litex
  image: ubuntu:22.04
  before_script:
    - apt-get update && apt-get install -y python3 python3-pip
    - pip3 install litex litepcie
    - pip3 install -e .
  script:
    - litepcie-test --device /dev/litepcie0
    - python3 -m pytest tests/hardware/ -v
  when: manual
  allow_failure: true

# Deploy to internal PyPI (optional)
deploy:internal:
  stage: deploy
  image: python:3.10.11
  script:
    - pip install twine
    - twine upload --repository-url $CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/pypi dist/*
  only:
    - tags
  environment:
    name: internal-pypi
    url: $CI_PROJECT_URL/-/packages

# Deploy to PyPI (optional)
deploy:pypi:
  stage: deploy
  image: python:3.10.11
  script:
    - pip install twine
    - twine upload dist/*
  only:
    - tags
  when: manual
  environment:
    name: pypi
    url: https://pypi.org/project/litepcie-test/